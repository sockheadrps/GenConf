{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"Generator Fuel Estimate\"\n",
        "format:\n",
        "  html:\n",
        "    code-fold: true\n",
        "    dashboard: true\n",
        "    theme: cosmo # A clean, professional Bootstrap theme\n",
        "    css: custom.css # Custom CSS file\n",
        "jupyter: python3\n",
        "---\n",
        "\n",
        "\n",
        "## Fuel Estimate Dashboard\n",
        "\n",
        "This dashboard provides a detailed estimate for fuel needs and costs based on data for the selected month.\n",
        "\n",
        "### Fuel Summary\n",
        "\n",
        "**Total Fuel Needed:** `r total_fuel_needed` gallons  \n",
        "**Total Fuel Cost:** `r total_fuel_cost` USD\n"
      ],
      "id": "20eeaf46"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import os\n",
        "from app.api.genfuel import FuelEstimator\n",
        "\n",
        "# Instantiate the FuelEstimator for December\n",
        "fuel_estimator = FuelEstimator(\"december\")\n",
        "\n",
        "# Calculate total fuel needed\n",
        "total_fuel_needed = fuel_estimator.total_fuel_needed()\n",
        "\n",
        "# Define the cost per gallon (this could be dynamically calculated or fetched)\n",
        "cost_per_gallon = 5.50  # Example price, modify as needed\n",
        "\n",
        "# Calculate the total cost to fill up all generators\n",
        "total_fuel_cost = fuel_estimator.estimate_fuel_cost(cost_per_gallon)\n",
        "\n",
        "# Return the values for Quarto rendering\n",
        "total_fuel_needed, total_fuel_cost  # Return values to be displayed in markdown\n"
      ],
      "id": "5d54f77f",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Define the cost per gallon\n",
        "cost_per_gallon = 5.50  # Example price, modify as needed\n",
        "\n",
        "# Display detailed generator fuel estimates\n",
        "generator_estimates = fuel_estimator.get_estimates()\n",
        "\n",
        "# Extract generator names and their fuel deltas (amount of fuel needed to fill)\n",
        "generator_names = list(generator_estimates.keys())\n",
        "fuel_deltas = [est['fuel_delta'] for est in generator_estimates.values()]\n",
        "\n",
        "# Calculate the fuel cost per generator\n",
        "fuel_costs = [fuel_delta * cost_per_gallon for fuel_delta in fuel_deltas]\n",
        "\n",
        "# Sort the fuel costs and generator names from most expensive to least expensive\n",
        "sorted_indices = sorted(range(len(fuel_costs)), key=lambda i: fuel_costs[i], reverse=True)\n",
        "sorted_generator_names = [generator_names[i] for i in sorted_indices]\n",
        "sorted_fuel_costs = [fuel_costs[i] for i in sorted_indices]\n",
        "\n",
        "# Create the bar chart for cost per generator\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.bar(sorted_generator_names, sorted_fuel_costs, color='lightgreen')\n",
        "plt.title(f\"Fuel Cost to Fill Each Generator, Cost per gallon: {cost_per_gallon}\", fontsize=16)\n",
        "plt.xlabel(\"Generator Name\", fontsize=14)\n",
        "plt.ylabel(\"Fuel Cost ($)\", fontsize=14)\n",
        "plt.xticks(rotation=45, ha=\"right\")  # Rotate x-axis labels for readability\n",
        "plt.tight_layout()\n",
        "\n",
        "# Show the graph\n",
        "plt.show()\n"
      ],
      "id": "1102cc20",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Extract generator names and their fuel deltas (amount of fuel needed to fill)\n",
        "generator_names = list(generator_estimates.keys())\n",
        "fuel_deltas = [est['fuel_delta'] for est in generator_estimates.values()]\n",
        "\n",
        "# Create the bar chart\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.bar(generator_names, fuel_deltas, color='skyblue')\n",
        "plt.title(\"Fuel Needed for Each Generator\", fontsize=16)\n",
        "plt.xlabel(\"Generator Name\", fontsize=14)\n",
        "plt.ylabel(\"Fuel Needed (Gallons)\", fontsize=14)\n",
        "plt.xticks(rotation=45, ha=\"right\")  # Rotate x-axis labels for readability\n",
        "plt.tight_layout()\n",
        "\n",
        "# Show the graph\n",
        "plt.show()"
      ],
      "id": "0ffb8075",
      "execution_count": null,
      "outputs": []
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "C:\\Users\\a123d\\AppData\\Local\\Programs\\Python\\Python313\\share\\jupyter\\kernels\\python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}