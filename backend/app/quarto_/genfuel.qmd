---
title: "Generator Fuel Estimate"
format:
  html:
    code-fold: true
    dashboard: true
    theme: cosmo # A clean, professional Bootstrap theme
    css: custom.css # Custom CSS file
jupyter: python3
---

## Fuel Estimate Dashboard

This dashboard provides a detailed estimate for fuel needs and costs based on data for the selected month.

### Fuel Summary

**Total Fuel Needed:** `r total_fuel_needed` gallons  
**Total Fuel Cost:** `r total_fuel_cost` USD

```{python}
import os
from app.api.genfuel import FuelEstimator

# Instantiate the FuelEstimator for December
fuel_estimator = FuelEstimator("december")

# Calculate total fuel needed
total_fuel_needed = fuel_estimator.total_fuel_needed()

# Define the cost per gallon (this could be dynamically calculated or fetched)
cost_per_gallon = 5.50  # Example price, modify as needed

# Calculate the total cost to fill up all generators
total_fuel_cost = fuel_estimator.estimate_fuel_cost(cost_per_gallon)

# Return the values for Quarto rendering
total_fuel_needed, total_fuel_cost  # Return values to be displayed in markdown


```


```{python}
import matplotlib.pyplot as plt

# Define the cost per gallon
cost_per_gallon = 5.50  # Example price, modify as needed

# Display detailed generator fuel estimates
generator_estimates = fuel_estimator.get_estimates()

# Extract generator names and their fuel deltas (amount of fuel needed to fill)
generator_names = list(generator_estimates.keys())
fuel_deltas = [est['fuel_delta'] for est in generator_estimates.values()]

# Calculate the fuel cost per generator
fuel_costs = [fuel_delta * cost_per_gallon for fuel_delta in fuel_deltas]

# Sort the fuel costs and generator names from most expensive to least expensive
sorted_indices = sorted(range(len(fuel_costs)), key=lambda i: fuel_costs[i], reverse=True)
sorted_generator_names = [generator_names[i] for i in sorted_indices]
sorted_fuel_costs = [fuel_costs[i] for i in sorted_indices]

# Create the bar chart for cost per generator
plt.figure(figsize=(10, 6))
plt.bar(sorted_generator_names, sorted_fuel_costs, color='lightgreen')
plt.title(f"Fuel Cost to Fill Each Generator, Cost per gallon: {cost_per_gallon}", fontsize=16)
plt.xlabel("Generator Name", fontsize=14)
plt.ylabel("Fuel Cost ($)", fontsize=14)
plt.xticks(rotation=45, ha="right")  # Rotate x-axis labels for readability
plt.tight_layout()

# Show the graph
plt.show()


```



```{python}
import matplotlib.pyplot as plt

# Extract generator names and their fuel deltas (amount of fuel needed to fill)
generator_names = list(generator_estimates.keys())
fuel_deltas = [est['fuel_delta'] for est in generator_estimates.values()]

# Create the bar chart
plt.figure(figsize=(10, 6))
plt.bar(generator_names, fuel_deltas, color='skyblue')
plt.title("Fuel Needed for Each Generator", fontsize=16)
plt.xlabel("Generator Name", fontsize=14)
plt.ylabel("Fuel Needed (Gallons)", fontsize=14)
plt.xticks(rotation=45, ha="right")  # Rotate x-axis labels for readability
plt.tight_layout()

# Show the graph
plt.show()
```
